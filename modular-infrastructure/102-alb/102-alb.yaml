---
# ---------------------------------------------------------------------------------------------------
# version  1.0
# Library: https://github.com/Frankie116/my-library.git
# Creates an Application Load Balancer
# ---------------------------------------------------------------------------------------------------

# req:
# 100-vpc.yaml

AWSTemplateFormatVersion: 2010-09-09
Description: This template creates an ALB.  The code is part of a standard modular infrastructure library.



Metadata:

  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "Export VPC Stack Name"
        Parameters:
          - ExportVpcStackName



Parameters:

  ExportVpcStackName:
    Description: The name of the vpc stack that exports values
    Type: String
    Default: MyVpc



Resources:

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyALB
      SecurityGroups:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-ALBSecurityGroup
      Subnets: 
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet1
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet2

  ALBListenerNoSslCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,302
      Name: MyWebServers
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC



Outputs:

  ALBTargetGroup:
    Description: Webserver target group
    Export:
      Name: !Sub ${AWS::StackName}-ALBTargetGroup
    Value: !Ref ALBTargetGroup

  ALBDnsName:
    Description: ALB DNS Name
    Export:
      Name: !Sub ${AWS::StackName}-ALBDnsName
    Value: !GetAtt ALB.DNSName

  ALBZoneID:
    Description: ALB Canonical Hosted Zone ID
    Export:
      Name: !Sub ${AWS::StackName}-ALBZoneID
    Value: !GetAtt ALB.CanonicalHostedZoneID