## Initial config

Parameters:

  AppName:
    Type: String
    Description: Name of app requiring ELB exposure
    Default: simple-app

  AppContainerPort:
    Type: Number
    Description: Container port of app requiring ELB exposure
    Default: '80'

  AppHostPort:  
    Type: Number
    Description: Host port of app requiring ELB exposure
    Default: '80'


Resources:

## ------------------------------------------------------------------------------------
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: MyFargateCluster
      CapacityProviders:
        - FARGATE
        # - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        # - CapacityProvider: FARGATE_SPOT
        #   Weight: 1

## ------------------------------------------------------------------------------------

  ECSService:
    Type: AWS::ECS::Service
    # DependsOn:
    # - Listener
    Properties:
      # Role:
      #   Ref: ECSServiceRole
      TaskDefinition:
        Ref: ECSTaskDefinition
      DesiredCount: 1
      # LoadBalancers:
      # - TargetGroupArn:
      #     Ref: TargetGroup
      #   ContainerPort: 80
      #   ContainerName: sample-app
      Cluster:
        Ref: ECSCluster

## ------------------------------------------------------------------------------------

  ECSTaskDefinition: 
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        - 
          Name: 
            Ref: "AppName"
          MountPoints: 
            - 
              SourceVolume: "my-vol"
              ContainerPath: "/var/www/my-vol"
          Image: "amazon/amazon-ecs-sample"
          Cpu: 256
          PortMappings: 
            - 
              ContainerPort: 
                Ref: "AppContainerPort"
              HostPort: 
                Ref: "AppHostPort"
          EntryPoint: 
            - "/usr/sbin/apache2"
            - "-D"
            - "FOREGROUND"
          Memory: 512
          Essential: true
        - 
          Name: "busybox"
          Image: "busybox"
          Cpu: 256
          EntryPoint: 
            - "sh"
            - "-c"
          Memory: 512
          Command: 
            - "/bin/sh -c \"while true; do /bin/date > /var/www/my-vol/date; sleep 1; done\""
          Essential: false
          VolumesFrom: 
            - 
              SourceContainer: 
                Ref: "AppName"
      Volumes: 
        - 
          Host: 
            SourcePath: "/var/lib/docker/vfs/dir/"
          Name: "my-vol"

## ------------------------------------------------------------------------------------
## Only required for LoadBalancer

  # ECSServiceRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: 2008-10-17
  #       Statement:
  #         - Sid: ''
  #           Effect: Allow
  #           Principal:
  #             Service: ecs.amazonaws.com
  #           Action: 'sts:AssumeRole'
  #     ManagedPolicyArns:
  #       - 'arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole'